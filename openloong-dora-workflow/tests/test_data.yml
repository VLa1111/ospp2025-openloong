nodes:
  # 工作流协调节点 - 负责整体工作流管理
  - id: workflow_coordinator
    path: ./workflow_coordinator_node.py
    inputs:
      trigger: dora/timer/secs/5  # 每5秒触发一次检查
      task_completed: status_monitor/task_completed
      task_failed: status_monitor/task_failed
      proceed_to_next: status_monitor/proceed_to_next
    outputs:
      - workflow_started
      - next_step
      - step_completed
      - step_failed
      - result

  # 任务规划节点 - 负责具体任务分解
  - id: task_planner
    path: ./task_planner_node.py
    inputs:
      workflow_started: workflow_coordinator/workflow_started
      next_step: workflow_coordinator/next_step
      control_result: upper_controller/result
      neck_result: upper_controller/result
      waist_result: upper_controller/result
    outputs:
      - control
      - neck_control
      - waist_control
      - result

  # 状态监控节点 - 负责监控机器人状态和条件判断
  - id: status_monitor
    path: status_monitor_node.py
    inputs:
      arm_state: upper_controller/result
      end_state: upper_controller/result
      neck_state: upper_controller/result
      waist_state: upper_controller/result
      control_result: upper_controller/result
    outputs:
      - task_completed
      - task_failed
      - proceed_to_next
      - result

  # 上体控制器节点 - 封装 gRPC 客户端
  - id: upper_controller
    path: ./upper_controller_node.py
    inputs:
      control: task_planner/control
      neck_control: task_planner/neck_control
      waist_control: task_planner/waist_control
    outputs:
      - result

  # 日志记录节点 - 记录工作流执行日志
  # - id: logger
  #   path: ./logger_node.py
  #   inputs:
  #     workflow_started: workflow_coordinator/workflow_started
  #     task_completed: status_monitor/task_completed
  #     task_failed: status_monitor/task_failed
  #     step_completed: workflow_coordinator/step_completed
  #     step_failed: workflow_coordinator/step_failed
  #     result: workflow_coordinator/result
  #   outputs:
  #     - log 